var cards = require('./cards.js');

module.exports.basicDeck = function() {
    return [
        cards.MurlocRaider(),
        cards.Kodorider(),
        cards.MasterJouster(),
        cards.ArcaneGiant(),
        cards.BigGameHunter(),
        cards.HoggerScourgeofElwynn(),
        cards.FacelessManipulator(),
        cards.MasterJouster(),
        cards.KnifeJuggler(),
        cards.Alexstrasza(),
        cards.Sylvanas(),
        cards.EmperorThaurissan(),
        cards.CThun(),
        cards.Ragnaros(),
        cards.NexusChampionSaraad(),
        cards.YShaarjRageUnbound(),
        cards.PollutedHoarder(),
        cards.CorruptedHealbot(),
        cards.ValidatedDoomsayer(),
    ];
};

module.exports.basicMage = function() {
    return [
        cards.Fireball(),
        cards.Fireball(),
        cards.Frostbolt(),
        cards.Frostbolt(),
        cards.ArcaneMissiles(),
        cards.Polymorph(),
        cards.ArcaneIntellect(),
        cards.MirrorEntity(),
        cards.Duplicate(),
        cards.Vaporize(),
        cards.Vaporize(),
        cards.ManaWyrm(),
        cards.UnstablePortal(),
        cards.UnstablePortal(),
        cards.Spellslinger(),
        cards.Spellslinger(),
        cards.Flamecannon(),
        cards.HoggerScourgeofElwynn(),
        cards.Flamestrike(),
        cards.ArchmageAntonidas(),
        cards.YoggSaronHopesEnd(),
        cards.BeckonerofEvil(),
        cards.TwilightElder(),
        cards.TwilightElder(),
        cards.CThun(),
        cards.NexusChampionSaraad(),
        cards.ArcaneGiant(),
        cards.YShaarjRageUnbound(),
        cards.CorruptedHealbot(),
        cards.ValidatedDoomsayer(),
    ];
};

module.exports.basicWarrior = function() {
    return [
        cards.Execute(),
        cards.Execute(),
        cards.Whirlwind(),
        cards.Whirlwind(),
        cards.GrimPatron(),
        cards.GrimPatron(),
        cards.ArcaniteReaper(),
        cards.ArcaniteReaper(),
        cards.FrothingBerserker(),
        cards.FrothingBerserker(),
        cards.AcolyteofPain(),
        cards.AcolyteofPain(),
        cards.ArcaneGiant(),
        cards.PilotedShredder(),
        cards.HoggerScourgeofElwynn(),
        cards.BloodWarriors(),
        cards.BloodWarriors(),
        cards.FacelessManipulator(),
        cards.YoggSaronHopesEnd(),
        cards.BeckonerofEvil(),
        cards.TwilightElder(),
        cards.TwilightElder(),
        cards.EmperorThaurissan(),
        cards.CThun(),
        cards.Ragnaros(),
        cards.NexusChampionSaraad(),
        cards.YShaarjRageUnbound(),
        cards.PollutedHoarder(),
        cards.CorruptedHealbot(),
        cards.ValidatedDoomsayer(),
    ];
};

module.exports.basicRogue = function() {
    return [
        cards.Backstab(),
        cards.Backstab(),
        cards.Sap(),
        cards.Sap(),
        cards.Shiv(),
        cards.FanofKnives(),
        cards.FanofKnives(),
        cards.Sprint(),
        cards.Sprint(),
        cards.Kodorider(),
        cards.KnifeJuggler(),
        cards.PilotedShredder(),
        cards.PilotedShredder(),
        cards.FrostwolfGrunt(),
        cards.MasterJouster(),
        cards.ArcaneGiant(),
        cards.HoggerScourgeofElwynn(),
        cards.FacelessManipulator(),
        cards.FacelessManipulator(),
        cards.YoggSaronHopesEnd(),
        cards.BeckonerofEvil(),
        cards.TwilightElder(),
        cards.TwilightElder(),
        cards.CThun(),
        cards.Ragnaros(),
        cards.NexusChampionSaraad(),
        cards.YShaarjRageUnbound(),
        cards.PollutedHoarder(),
        cards.CorruptedHealbot(),
        cards.ValidatedDoomsayer(),
    ];
};

module.exports.basicShaman = function() {
    return [
        cards.Crackle(),
        cards.Crackle(),
        cards.LavaBurst(),
        cards.WhirlingZapoMatic(),
        cards.WhirlingZapoMatic(),
        cards.FeralSpirit(),
        cards.FeralSpirit(),
        cards.ForkedLightning(),
        cards.ForkedLightning(),
        cards.UnboundElemental(),
        cards.UnboundElemental(),
        cards.AlAkirtheWindlord(),
        cards.Kodorider(),
        cards.KnifeJuggler(),
        cards.KnifeJuggler(),
        cards.ArcaneGiant(),
        cards.PilotedShredder(),
        cards.YoggSaronHopesEnd(),
        cards.BeckonerofEvil(),
        cards.TwilightElder(),
        cards.TwilightElder(),
        cards.HoggerScourgeofElwynn(),
        cards.Sylvanas(),
        cards.EmperorThaurissan(),
        cards.CThun(),
        cards.NexusChampionSaraad(),
        cards.YShaarjRageUnbound(),
        cards.PollutedHoarder(),
        cards.CorruptedHealbot(),
        cards.ValidatedDoomsayer(),
    ];
};

module.exports.basicHunter = function() {
    return [
        cards.AnimalCompanion(),
        cards.AnimalCompanion(),
        cards.MultiShot(),
        cards.UnleashTheHounds(),
        cards.UnleashTheHounds(),
        cards.ExplosiveShot(),
        cards.ExplosiveShot(),
        cards.ArcaneShot(),
        cards.DeadlyShot(),
        cards.HuntersMark(),
        cards.HuntersMark(),
        cards.KingsElekk(),
        cards.KingsElekk(),
        cards.GiantSandworm(),
        cards.GiantSandworm(),
        cards.HoggerScourgeofElwynn(),
        cards.PilotedShredder(),
        cards.MasterJouster(),
        cards.ArcaneGiant(),
        cards.YoggSaronHopesEnd(),
        cards.BeckonerofEvil(),
        cards.TwilightElder(),
        cards.TwilightElder(),
        cards.CThun(),
        cards.Ragnaros(),
        cards.NexusChampionSaraad(),
        cards.YShaarjRageUnbound(),
        cards.PollutedHoarder(),
        cards.CorruptedHealbot(),
        cards.ValidatedDoomsayer(),
    ];
};

module.exports.basicDruid = function() {
    return [
        cards.Swipe(),
        cards.Swipe(),
        cards.DruidoftheFlame(),
        cards.Innervate(),
        cards.Innervate(),
        cards.Moonfire(),
        cards.TreeofLife(),
        cards.Cenarius(),
        cards.Malorne(),
        cards.Kodorider(),
        cards.KnifeJuggler(),
        cards.PilotedShredder(),
        cards.PilotedShredder(),
        cards.KlaxxiAmberWeaver(),
        cards.ArcaneGiant(),
        cards.HoggerScourgeofElwynn(),
        cards.KlaxxiAmberWeaver(),
        cards.FacelessManipulator(),
        cards.AnnoyoTron(),
        cards.YoggSaronHopesEnd(),
        cards.BeckonerofEvil(),
        cards.TwilightElder(),
        cards.TwilightElder(),
        cards.CThun(),
        cards.Ragnaros(),
        cards.NexusChampionSaraad(),
        cards.YShaarjRageUnbound(),
        cards.PollutedHoarder(),
        cards.CorruptedHealbot(),
        cards.ValidatedDoomsayer(),
    ];
};

module.exports.basicWarlock = function() {
    return [
        cards.Voidwalker(),
        cards.Voidwalker(),
        cards.MortalCoil(),
        cards.MortalCoil(),
        cards.Darkbomb(),
        cards.Darkbomb(),
        cards.Succubus(),
        cards.LordJaraxxus(),
        cards.MalGanis(),
        cards.Kodorider(),
        cards.KnifeJuggler(),
        cards.KnifeJuggler(),
        cards.PilotedShredder(),
        cards.MasterJouster(),
        cards.HoggerScourgeofElwynn(),
        cards.ArcaneGiant(),
        cards.FacelessManipulator(),
        cards.AnnoyoTron(),
        cards.YoggSaronHopesEnd(),
        cards.BeckonerofEvil(),
        cards.TwilightElder(),
        cards.TwilightElder(),
        cards.CThun(),
        cards.Ragnaros(),
        cards.Deathwing(),
        cards.NexusChampionSaraad(),
        cards.YShaarjRageUnbound(),
        cards.PollutedHoarder(),
        cards.CorruptedHealbot(),
        cards.ValidatedDoomsayer(),
    ];
};

module.exports.basicPaladin = function() {
    return [
        cards.BlessingofKings(),
        cards.BlessingofKings(),
        cards.AvengingWrath(),
        cards.Equality(),
        cards.WarhorseTrainer(),
        cards.WarhorseTrainer(),
        cards.HammerofWrath(),
        cards.AldorPeacekeeper(),
        cards.AldorPeacekeeper(),
        cards.MurlocKnight(),
        cards.StandAgainstDarkness(),
        cards.StandAgainstDarkness(),
        cards.TirionFordring(),
        cards.KnifeJuggler(),
        cards.HoggerScourgeofElwynn(),
        cards.PilotedShredder(),
        cards.YoggSaronHopesEnd(),
        cards.BeckonerofEvil(),
        cards.TwilightElder(),
        cards.TwilightElder(),
        cards.ArcaneGiant(),
        cards.EmperorThaurissan(),
        cards.Sylvanas(),
        cards.CThun(),
        cards.Ragnaros(),
        cards.NexusChampionSaraad(),
        cards.YShaarjRageUnbound(),
        cards.PollutedHoarder(),
        cards.CorruptedHealbot(),
        cards.ValidatedDoomsayer(),
    ];
};

module.exports.basicPriest = function() {
    return [
        cards.HolyNova(),
        cards.HolyNova(),
        cards.ShadowWordPain(),
        cards.ShadowWordPain(),
        cards.PowerWordShield(),
        cards.PowerWordShield(),
        cards.NorthshireCleric(),
        cards.NorthshireCleric(),
        cards.Kodorider(),
        cards.KnifeJuggler(),
        cards.AnnoyoTron(),
        cards.Shadowform(),
        cards.PilotedShredder(),
        cards.Resurrect(),
        cards.Shadowform(),
        cards.Resurrect(),
        cards.HoggerScourgeofElwynn(),
        cards.ArcaneGiant(),
        cards.ArcaneGiant(),
        cards.BeckonerofEvil(),
        cards.YoggSaronHopesEnd(),
        cards.TwilightElder(),
        cards.TwilightElder(),
        cards.CThun(),
        cards.Ragnaros(),
        cards.NexusChampionSaraad(),
        cards.YShaarjRageUnbound(),
        cards.PollutedHoarder(),
        cards.CorruptedHealbot(),
        cards.ValidatedDoomsayer(),
    ];
};

module.exports.basicMimiron = function() {
    return [
        cards.ClockworkGnome(),
        cards.ClockworkGnome(),
        cards.ManaWyrm(),
        cards.ManaWyrm(),
        cards.Frostbolt(),
        cards.Frostbolt(),
        cards.AnnoyoTron(),
        cards.AnnoyoTron(),
        cards.Mechwarper(),
        cards.Mechwarper(),
        cards.Snowchugger(),
        cards.Snowchugger(),
        cards.HarvestGolem(),
        cards.HarvestGolem(),
        cards.SpiderTank(),
        cards.SpiderTank(),
        cards.TinkertownTechnician(),
        cards.TinkertownTechnician(),
        cards.Fireball(),
        cards.Fireball(),
        cards.Polymorph(),
        cards.Polymorph(),
        cards.GoblinBlastmage(),
        cards.GoblinBlastmage(),
        cards.MechanicalYeti(),
        cards.Toshley(),
        cards.Sylvanas(),
        cards.ArchmageAntonidas(),
        cards.DrBoom(),
        cards.Ragnaros(),
    ];
};

module.exports.DragonPriest = function() {
    return [
        cards.Resurrect(),
        cards.HolySmite(),
        cards.NorthshireCleric(),
        cards.NorthshireCleric(),
        cards.TwilightWhelp(),
        cards.TwilightWhelp(),
        cards.WyrmrestAgent(),
        cards.WyrmrestAgent(),
        cards.ShadowWordDeath(),
        cards.ShadowWordDeath(),
        cards.VelensChosen(),
        cards.VelensChosen(),
        cards.BlackwingTechnician(),
        cards.BlackwingTechnician(),
        cards.DarkCultist(),
        cards.TwilightGuardian(),
        cards.TwilightGuardian(),
        cards.HolyNova(),
        cards.HolyNova(),
        cards.AzureDrake(),
        cards.AzureDrake(),
        cards.BlackwingCorruptor(),
        cards.BlackwingCorruptor(),
        cards.Entomb(),
        cards.HolyFire(),
        // cards.JusticarTrueheart(),
        cards.Sylvanas(),
        // cards.RendBlackhand(),
        // cards.Nefarian(),
        // cards.Ysera()
    ];
};

module.exports.AnubRekhan = function() {
    return [
        cards.MortalCoil(),
        cards.MortalCoil(),
        cards.Deathcharger(),
        cards.Deathcharger(),
        cards.Frostbolt(),
        cards.Frostbolt(),
        cards.CrazedAlchemist(),
        cards.CrazedAlchemist(),
        cards.HauntedCreeper(),
        cards.HauntedCreeper(),
        cards.NerubarWeblord(),
        cards.NerubarWeblord(),
        cards.NerubianEgg(),
        cards.NerubianEgg(),
        cards.ShadowBolt(),
        cards.ShadowBolt(),
        cards.Deathlord(),
        cards.Deathlord(),
        cards.ShadeofNaxxramas(),
        cards.ShadeofNaxxramas(),
        cards.StoneskinGargoyle(),
        cards.StoneskinGargoyle(),
        cards.Shadowflame(),
        cards.AnubarAmbusher(),
        cards.AnubarAmbusher(),
        cards.Abomination(),
        cards.Abomination(),
        cards.LocustSwarm(),
        cards.LocustSwarm(),
        cards.LocustSwarm(),
    ];
};

module.exports.GrandWidowFaerlina = function() {
    return [
        cards.AbusiveSergeant(),
        cards.AbusiveSergeant(),
        cards.AcolyteofPain(),
        cards.AcolyteofPain(),
        cards.BattleRage(),
        cards.BattleRage(),
        // cards.CultMaster(),
        // cards.DancingSwords(),
        // cards.DancingSwords(),
        cards.DarkCultist(),
        cards.DarkCultist(),
        cards.Deathcharger(),
        cards.Deathcharger(),
        // cards.Hellfire(),
        // cards.Hellfire(),
        // cards.InnerRage(),
        // cards.InnerRage(),
        // cards.Necroknight(),
        // cards.Necroknight(),
        cards.NerubianEgg(),
        cards.NerubianEgg(),
        // cards.Rampage(),
        // cards.Rampage(),
        // cards.Undertaker(),
        // cards.Undertaker(),
        // cards.WorshipperN(),
        // cards.WorshipperN(),
        // cards.WorshipperN(),
        // cards.WorshipperN(),
        // cards.WorshipperN()
    ];
};

module.exports.GrandWidowFaerlina_Heroic = function() {
    return [
        cards.AbusiveSergeant(),
        cards.AbusiveSergeant(),
        cards.AcolyteofPain(),
        cards.AcolyteofPain(),
        cards.BattleRage(),
        cards.BattleRage(),
        // cards.CultMaster(),
        // cards.DancingSwords(),
        // cards.DancingSwords(),
        cards.DarkCultist(),
        cards.DarkCultist(),
        cards.Deathcharger(),
        cards.Deathcharger(),
        // cards.Hellfire(),
        // cards.Hellfire(),
        // cards.InnerRage(),
        // cards.InnerRage(),
        // cards.Necroknight(),
        // cards.Necroknight(),
        cards.NerubianEgg(),
        cards.NerubianEgg(),
        // cards.Rampage(),
        // cards.Rampage(),
        // cards.Undertaker(),
        // cards.Undertaker(),
        // cards.WorshipperH(),
        // cards.WorshipperH(),
        // cards.WorshipperH(),
        // cards.WorshipperH(),
        // cards.WorshipperH()
    ];
};

module.exports.TooManyPortals = function() {
    return [
        cards.UnstablePortal(),
        cards.UnstablePortal(),
        cards.UnstablePortal(),
        cards.UnstablePortal(),
        cards.UnstablePortal(),
        cards.UnstablePortal(),
        cards.UnstablePortal(),
        cards.UnstablePortal(),
        cards.UnstablePortal(),
        cards.UnstablePortal(),
        cards.UnstablePortal(),
        cards.UnstablePortal(),
        cards.UnstablePortal(),
        cards.UnstablePortal(),
        cards.UnstablePortal(),
        cards.UnstablePortal(),
        cards.UnstablePortal(),
        cards.UnstablePortal(),
        cards.UnstablePortal(),
        cards.UnstablePortal(),
        cards.UnstablePortal(),
        cards.UnstablePortal(),
        cards.UnstablePortal(),
        cards.UnstablePortal(),
        cards.UnstablePortal(),
        cards.UnstablePortal(),
        cards.UnstablePortal(),
        cards.UnstablePortal(),
        cards.UnstablePortal(),
        cards.UnstablePortal(),
    ];
};

module.exports.SpidersSpidersEverywhere = function() {
    return [
        cards.Webspinner(),
        cards.Webspinner(),
        cards.Webspinner(),
        cards.Webspinner(),
        cards.Webspinner(),
        cards.Webspinner(),
        cards.Webspinner(),
        cards.Webspinner(),
        cards.Webspinner(),
        cards.Webspinner(),
        cards.Webspinner(),
        cards.Webspinner(),
        cards.Webspinner(),
        cards.Webspinner(),
        cards.Webspinner(),
        cards.Webspinner(),
        cards.Webspinner(),
        cards.Webspinner(),
        cards.Webspinner(),
        cards.Webspinner(),
        cards.Webspinner(),
        cards.Webspinner(),
        cards.Webspinner(),
        cards.Webspinner(),
        cards.Webspinner(),
        cards.Webspinner(),
        cards.Webspinner(),
        cards.Webspinner(),
        cards.Webspinner(),
        cards.Webspinner(),
    ];
};

module.exports.TwilightsHammer = function() {
    return [
        cards.YoggSaronHopesEnd(),
        cards.BeckonerofEvil(),
        cards.BeckonerofEvil(),
        cards.BeckonerofEvil(),
        cards.BeckonerofEvil(),
        cards.BeckonerofEvil(),
        cards.BeckonerofEvil(),
        cards.BeckonerofEvil(),
        cards.TwilightElder(),
        cards.TwilightElder(),
        cards.TwilightElder(),
        cards.TwilightElder(),
        cards.TwilightElder(),
        cards.TwilightElder(),
        cards.TwilightElder(),
        cards.TwilightElder(),
        cards.CThunsChosen(),
        cards.CThunsChosen(),
        cards.CThunsChosen(),
        cards.CThunsChosen(),
        cards.KlaxxiAmberWeaver(),
        cards.KlaxxiAmberWeaver(),
        cards.KlaxxiAmberWeaver(),
        cards.KlaxxiAmberWeaver(),
        cards.CThun()
    ];
};

module.exports.FullWotOG = function() {
    return [
        cards.YoggSaronHopesEnd(),
        cards.BeckonerofEvil(),
        cards.TwilightElder(),
        cards.TwilightElder(),
        cards.CThunsChosen(),
        cards.CThunsChosen(),
        cards.ArcaneGiant(),
        cards.ArcaneGiant(),
        cards.KlaxxiAmberWeaver(),
        cards.KlaxxiAmberWeaver(),
        cards.YShaarjRageUnbound(),
        cards.PollutedHoarder(),
        cards.CorruptedHealbot(),
        cards.CorruptedHealbot(),
        cards.ValidatedDoomsayer(),
        cards.ValidatedDoomsayer(),
        cards.StandAgainstDarkness(),
        cards.StandAgainstDarkness(),
        cards.HoggerScourgeofElwynn(),
        cards.GiantSandworm(),
        cards.GiantSandworm(),
        cards.CThun()
    ];
};

module.exports.Weapons = function() {
    return [
        cards.WickedKnife(),
        cards.WickedKnife(),
        cards.WickedKnife(),
        cards.WickedKnife(),
        cards.WickedKnife(),
        cards.WickedKnife(),
        cards.WickedKnife(),
        cards.WickedKnife(),
        cards.WickedKnife(),
        cards.WickedKnife(),
        cards.WickedKnife(),
        cards.WickedKnife(),
        cards.WickedKnife(),
        cards.WickedKnife(),
        cards.WickedKnife(),
    ];
};

// Custom Sets

// These will be adventure boss decks, or decks using custom classes.

module.exports.C_LadyDeathwhisper_Normal = function() {
    return [
        cards.Frostbolt(),
        cards.Frostbolt(),
        cards.Frostbolt(),
        cards.Frostbolt(),
        cards.Frostbolt(),
        cards.Frostbolt(),
        cards.Frostbolt(),
        cards.ShadowBolt(),
        cards.ShadowBolt(),
        cards.ShadowBolt(),
        cards.ShadowBolt(),
        cards.ShadowBolt(),
        cards.ShadowBolt(),
        cards.ShadowBolt(),
        cards.C_CultAdherent(),
        cards.C_CultAdherent(),
        cards.C_CultAdherent(),
        cards.C_CultAdherent(),
        cards.C_CultAdherent(),
        cards.C_DarkEmpowerment(),
        cards.C_DarkEmpowerment(),
        cards.C_CultFanatic_Normal(),
        cards.C_CultFanatic_Normal(),
        cards.C_CultFanatic_Normal(),
        cards.C_CultFanatic_Normal(),
        cards.C_CultFanatic_Normal(),
        cards.C_DarkTransformation(),
        cards.C_DarkTransformation(),
        cards.BloodmageThalnos(),
        cards.Loatheb()
    ];
};

module.exports.C_OrgrimsHammer_Heroic = function() {
    return [
        cards.C_CannonBlast(),
        cards.C_CannonBlast(),
        cards.C_CannonBlast(),
        cards.C_CannonBlast(),
        cards.C_CannonBlast(),
        cards.C_IncineratingBlast(),
        cards.C_IncineratingBlast(),
        cards.C_IncineratingBlast(),
        cards.C_IncineratingBlast(),
        cards.C_IncineratingBlast(),
        cards.C_IncineratingBlast(),
        cards.C_Repairs(),
        cards.C_Fortify(),
        cards.C_Fortify(),
        cards.C_Fortify(),
        cards.C_Fortify(),
        // cards.C_BoardingParty(),
        // cards.C_BoardingParty(),
        // cards.C_BoardingParty(),
        // cards.C_BoardingParty(),
        // cards.C_BoardingParty(),
        // cards.C_BoardingParty(),
        // cards.C_BoardingParty(),
        // cards.C_BoardingParty(),
        cards.C_Reload(),
        cards.C_Reload(),
        cards.C_Reload(),
        cards.C_Reload(),
        cards.C_Reload(),
        cards.C_Reload(),
    ];
};

module.exports.C_Skybreaker_Heroic = function() {
    return [
        cards.C_CannonBlast(),
        cards.C_CannonBlast(),
        cards.C_CannonBlast(),
        cards.C_CannonBlast(),
        cards.C_CannonBlast(),
        cards.C_CannonBlast(),
        cards.C_CannonBlast(),
        cards.C_CannonBlast(),
        cards.C_CannonBlast(),
        cards.C_CannonBlast(),
        cards.C_CannonBlast(),
        cards.C_IncineratingBlast(),
        cards.C_IncineratingBlast(),
        cards.C_IncineratingBlast(),
        cards.C_Repairs(),
        cards.C_Repairs(),
        cards.C_Repairs(),
        cards.C_Repairs(),
        cards.C_Repairs(),
        cards.C_Fortify(),
        // cards.C_BoardingParty(),
        // cards.C_BoardingParty(),
        // cards.C_BoardingParty(),
        cards.C_Reload(),
        cards.C_Reload(),
        cards.C_Reload(),
        cards.C_Reload(),
        cards.C_Reload(),
        cards.C_Reload(),
        cards.C_Reload(),
    ];
};

module.exports.mulligantest = function() {
    return [
        cards.LeperGnome(),
        cards.LeperGnome(),
        cards.LeperGnome(),
        cards.LeperGnome(),
        cards.LeperGnome(),
        cards.TinkertownTechnician()
    ];
};

module.exports.nzoth = function() {
    return [
        cards.PilotedShredder(),
        cards.PilotedShredder(),
        cards.PilotedShredder(),
        cards.PilotedShredder(),
        cards.PilotedShredder(),
        cards.PilotedShredder(),
        cards.PilotedShredder(),
        cards.PilotedShredder(),
        cards.PilotedShredder(),
        cards.PilotedShredder(),
        cards.PilotedShredder(),
        cards.PilotedShredder(),
        cards.PilotedShredder(),
        cards.PilotedShredder(),
        cards.PilotedShredder(),
        cards.PilotedShredder(),
        cards.PilotedShredder(),
        cards.PilotedShredder(),
        cards.PilotedShredder(),
        cards.PilotedShredder(),
        cards.PilotedShredder(),
        cards.PilotedShredder(),
        cards.PilotedShredder(),
        cards.PilotedShredder(),
        cards.PilotedShredder(),
        cards.PilotedShredder(),
        cards.NZoththeCorruptor(),
        cards.NZoththeCorruptor(),
        cards.NZoththeCorruptor(),
        cards.NZoththeCorruptor(),
        ];
};

module.exports.Yogg = function() {
    return [
        cards.ArcaneShot(),
        cards.ArcaneShot(),
        cards.ArcaneShot(),
        cards.ArcaneShot(),
        cards.ArcaneShot(),
        cards.ArcaneShot(),
        cards.ArcaneShot(),
        cards.ArcaneShot(),
        cards.ArcaneShot(),
        cards.ArcaneShot(),
        cards.ArcaneShot(),
        cards.ArcaneShot(),
        cards.ArcaneShot(),
        cards.ArcaneShot(),
        cards.ArcaneShot(),
        cards.ArcaneShot(),
        cards.YoggSaronHopesEnd(),
        cards.YoggSaronHopesEnd(),
        cards.YoggSaronHopesEnd(),
        cards.YoggSaronHopesEnd()
    ];
};